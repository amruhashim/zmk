/*
 * Copyright (c) 2020 The ZMK Contributors
 * Converted from QMK Cygnus V1 layout for ZMK
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

// Layer definitions
#define BASE 0
#define LOWER 1
#define RAISE 2
#define FUNCTION 3
#define TERMINAL 4

// Custom behaviors for complex keycodes
/ {
    behaviors {
        // Tap-hold for layer access
        lhm: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        // Custom behavior for CTRL+key combinations
        ctrl_h: ctrl_h {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp LEFT>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        ctrl_j: ctrl_j {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UNDER>, <&kp DOWN>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        ctrl_k: ctrl_k {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp UP>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        ctrl_l: ctrl_l {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBRC>, <&kp RIGHT>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        ctrl_spc: ctrl_spc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp LG(SPACE)>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        // W normally, @ when shifted
        w_at: w_at {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp AT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Quote/Apostrophe - " normally, ' when shifted
        quot_apos: quot_apos {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DQT>, <&kp SQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    // Macros for terminal functions
    macros {
        // Terminal tab management
        term_new_tab: term_new_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(T)>;
        };

        term_close_tab: term_close_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(W)>;
        };

        term_close_win: term_close_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(W))>;
        };

        term_next_tab: term_next_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(RBKT))>;
        };

        term_prev_tab: term_prev_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(LBKT))>;
        };

        // Terminal splits
        term_split_h: term_split_h {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(D)>;
        };

        term_split_v: term_split_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(D))>;
        };

        // Neovim split resizing
        term_win_left: term_win_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W)>, <&kp LT>;
        };

        term_win_down: term_win_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W)>, <&kp MINUS>;
        };

        term_win_up: term_win_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W)>, <&kp PLUS>;
        };

        term_win_right: term_win_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W)>, <&kp GT>;
        };

        // Terminal navigation
        term_zoom: term_zoom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(RET))>;
        };

        term_fullscreen: term_fullscreen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(F))>;
        };

        term_clear_line: term_clear_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(K)>;
        };

        term_clear_scrn: term_clear_scrn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K)>;
        };

        term_home: term_home {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A)>;
        };

        term_end: term_end {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(E)>;
        };
    };

    // Combos (converted from QMK)
    combos {
        compatible = "zmk,combos";
        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <13 14>; // Q W
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <25 26>; // A S
            bindings = <&kp TAB>;
        };

        combo_enter {
            timeout-ms = <50>;
            key-positions = <32 33>; // L ;
            bindings = <&kp RET>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ============================================================================
        // BASE LAYER - QWERTY with Alt access and ergonomic improvements
        // ============================================================================
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  NONE    │    Q     │    W     │    E     │    R     │    T     │   │    Y     │    U     │    I     │    O     │    P     │  NONE    │
            &none      &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P      &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │    A     │    S     │    D     │    F     │    G     │   │    H     │    J     │    K     │    L     │    ;     │  NONE    │
            &none      &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SEMI   &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │    Z     │    X     │    C     │    V     │    B     │   │    N     │    M     │    ,     │    .     │    /     │  NONE    │
            &none      &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &lhm LCTRL TAB &kp LSHFT &lt LOWER RET   &lt RAISE SPACE &kp BSPC &lhm LGUI ESC
        //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        // ============================================================================
        // LOWER LAYER - Numbers & Navigation
        // ============================================================================
        lower_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  NONE    │    1     │    2     │    3     │    4     │    5     │   │  M_LCLK  │  M_SCR_U │  M_RCLK  │   DEL    │   INS    │  NONE    │
            &none      &kp N1     &kp N2     &kp N3     &kp N4     &kp N5         &mkp LCLK  &msc SCRL_UP &mkp RCLK &kp DEL    &kp INS    &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │    6     │    7     │    8     │    9     │    0     │   │  M_LEFT  │  M_DOWN  │   M_UP   │ M_RIGHT  │  PG_UP   │  NONE    │
            &none      &kp N6     &kp N7     &kp N8     &kp N9     &kp N0         &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &kp PG_UP &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │  CMD+Z   │  CMD+X   │  CMD+C   │  CMD+V   │  CMD+B   │   │  M_MCLK  │ M_SCR_D  │   HOME   │   END    │  PG_DN   │  NONE    │
            &none      &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(B)      &mkp MCLK  &msc SCRL_DOWN &kp HOME &kp END    &kp PG_DN  &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &kp LCTRL  &kp LSHFT  &trans         &mo TERMINAL &kp BSPC   &kp LGUI
        //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        // ============================================================================
        // RAISE LAYER - Programming Symbols
        // ============================================================================
        raise_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  NONE    │    !     │   W/@    │    #     │    $     │    %     │   │    ^     │    &     │    *     │    (     │    )     │  NONE    │
            &none      &kp EXCL   &w_at      &kp HASH   &kp DLLR   &kp PRCNT      &kp CARET  &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR   &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │    =     │    [     │    ]     │    (     │    )     │   │  CTRL_H  │  CTRL_J  │  CTRL_K  │  CTRL_L  │ CTRL_SPC │  NONE    │
            &none      &kp EQUAL  &kp LBKT   &kp RBKT   &kp LPAR   &kp RPAR       &ctrl_h    &ctrl_j    &ctrl_k    &ctrl_l    &ctrl_spc  &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │    `     │    \     │    |     │    ~     │  "/'/'"  │   │    +     │    '     │    ,     │    .     │ ALT+/    │  NONE    │
            &none      &kp GRAVE  &kp BSLH   &kp PIPE   &kp TILDE  &quot_apos     &kp PLUS   &kp SQT    &kp COMMA  &kp DOT    &lhm LALT FSLH &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &lhm LCTRL TAB &kp LSHFT &mo TERMINAL   &trans     &kp BSPC   &kp LGUI
        //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        // ============================================================================
        // FUNCTION LAYER - F-keys & Mac System Controls
        // ============================================================================
        function_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  NONE    │    F1    │    F2    │    F3    │    F4    │    F5    │   │    F6    │    F7    │    F8    │    F9    │   F10    │  NONE    │
            &none      &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │   F11    │   F12    │  BRID    │  BRIU    │  MUTE    │   │ VOL_DN   │ VOL_UP   │  PREV    │  PLAY    │  NEXT    │  NONE    │
            &none      &kp F11    &kp F12    &kp C_BRI_DN &kp C_BRI_UP &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV &kp C_PP &kp C_NEXT &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │   NONE   │   NONE   │   NONE   │   NONE   │   NONE   │   │   NONE   │   NONE   │ CMD+S+3  │ CMD+S+4  │ CMD+S+5  │  NONE    │
            &none      &none      &none      &none      &none      &none          &none      &none      &kp LG(LS(N3)) &kp LG(LS(N4)) &kp LG(LS(N5)) &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &kp LCTRL  &none      &none          &kp SPACE  &kp BSPC   &kp LGUI
        //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        // ============================================================================
        // TERMINAL LAYER - Terminal Control & Neovim
        // ============================================================================
        terminal_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  NONE    │  TAB_1   │  TAB_2   │  TAB_3   │  TAB_4   │  TAB_5   │   │SCROLL_UP │ FONT_INC │ FONT_DEC │ FONT_RST │CLR_SCRN  │  NONE    │
            &none      &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N4) &kp LG(N5)     &kp PG_UP  &kp LG(PLUS) &kp LG(MINUS) &kp LG(N0) &term_clear_scrn &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │ NEW_TAB  │ SPLIT_H  │ SPLIT_V  │ NEXT_TAB │ PREV_TAB │   │ WIN_LEFT │ WIN_DOWN │  WIN_UP  │WIN_RIGHT │SCROLL_DN │  NONE    │
            &none      &term_new_tab &term_split_h &term_split_v &term_next_tab &term_prev_tab &term_win_left &term_win_down &term_win_up &term_win_right &kp PG_DN &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  NONE    │   ZOOM   │CLOSE_WIN │CLOSE_TAB │FULLSCREEN│   NONE   │   │   HOME   │ PREV_WIN │ NEXT_WIN │   END    │CLR_LINE  │  NONE    │
            &none      &term_zoom &term_close_win &term_close_tab &term_fullscreen &none    &term_home &kp LG(LBKT) &kp LG(RBKT) &term_end &term_clear_line &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &tog FUNCTION &trans   &trans         &trans     &trans     &kp RSHFT
        //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };
    };
};